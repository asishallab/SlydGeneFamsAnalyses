% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapManFunks.R
\name{evidenceCodeBins}
\alias{evidenceCodeBins}
\title{Classifies any given evidence code into the categories defined in argument
named list \code{ancestral.evidence.code.bins}. The names function of the
categories.}
\usage{
evidenceCodeBins(eco.id,
  ancestral.evidence.code.bins = getOption("MapMan2GO.ancestral.evidence.code.bins",
  list(TRUSTED = c("ECO:0000006", "ECO:0000088", "ECO:0000212",
  "ECO:0000352"), UNTRUSTED = c("ECO:0000041", "ECO:0000177",
  "ECO:0000204", "ECO:0000311", "ECO:0000361", "ECO:0000501",
  "ECO:0006055"))),
  there.can.be.only.one = getOption("MapMan2GO.there.can.be.only.one",
  TRUE))
}
\arguments{
\item{eco.id}{The evidence code identifier to be classified.}

\item{ancestral.evidence.code.bins}{A named list where the names are the
categories and the values are ancestral evidence codes helping to classify
all their children into categories not present in the ontology. Default is
\code{getOption('MapMan2GO.ancestral.evidence.code.bins', list(TRUSTED =
c('ECO:0000006', 'ECO:0000088', 'ECO:0000212', 'ECO:0000352'), 
UNTRUSTED = c('ECO:0000041', 'ECO:0000177', 'ECO:0000204', 'ECO:0000311', 'ECO:0000361',
'ECO:0000501', 'ECO:0006055')))}.}

\item{there.can.be.only.one}{boolean indicating whether to return only a
single group, even if more than one are assigned. In this case define group
priority by the order of groups appearing in argument
\code{ancestral.evidence.code.bins}, the first matching will be returned.
Default is \code{getOption( 'MapMan2GO.there.can.be.only.one', TRUE )}.}
}
\value{
A character vector the names of the categries into which the
argument \code{eco.id} could be put.
}
\description{
Classifies any given evidence code into the categories defined in argument
named list \code{ancestral.evidence.code.bins}. The names function of the
categories.
}
